package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"
	"fmt"

	"github.com/andersjbe/quin/graph/model"
)

// MyAccount is the resolver for the myAccount field.
func (r *queryResolver) MyAccount(ctx context.Context) (*model.User, error) {
	panic(fmt.Errorf("not implemented: MyAccount - myAccount"))
}

// MyProfile is the resolver for the myProfile field.
func (r *queryResolver) MyProfile(ctx context.Context) (*model.Profile, error) {
	panic(fmt.Errorf("not implemented: MyProfile - myProfile"))
}

// Profiles is the resolver for the profiles field.
func (r *queryResolver) Profiles(ctx context.Context, filter *model.ProfileFilter) ([]*model.Profile, error) {
	panic(fmt.Errorf("not implemented: Profiles - profiles"))
}

// Profile is the resolver for the profile field.
func (r *queryResolver) Profile(ctx context.Context, profileID string) (*model.Profile, error) {
	panic(fmt.Errorf("not implemented: Profile - profile"))
}

// Products is the resolver for the products field.
func (r *queryResolver) Products(ctx context.Context, filter *model.ProductFilter) ([]*model.Product, error) {
	panic(fmt.Errorf("not implemented: Products - products"))
}

// Product is the resolver for the product field.
func (r *queryResolver) Product(ctx context.Context, productID string) (*model.Product, error) {
	panic(fmt.Errorf("not implemented: Product - product"))
}

// SavedProducts is the resolver for the savedProducts field.
func (r *queryResolver) SavedProducts(ctx context.Context) ([]*model.Product, error) {
	panic(fmt.Errorf("not implemented: SavedProducts - savedProducts"))
}

// Outfits is the resolver for the outfits field.
func (r *queryResolver) Outfits(ctx context.Context) ([]*model.Outfit, error) {
	panic(fmt.Errorf("not implemented: Outfits - outfits"))
}

// Outfit is the resolver for the outfit field.
func (r *queryResolver) Outfit(ctx context.Context, outfitID string) (*model.Outfit, error) {
	panic(fmt.Errorf("not implemented: Outfit - outfit"))
}

// OutfitsByFollowing is the resolver for the outfitsByFollowing field.
func (r *queryResolver) OutfitsByFollowing(ctx context.Context) ([]*model.Outfit, error) {
	panic(fmt.Errorf("not implemented: OutfitsByFollowing - outfitsByFollowing"))
}

// LikedOutfits is the resolver for the likedOutfits field.
func (r *queryResolver) LikedOutfits(ctx context.Context) ([]*model.Outfit, error) {
	panic(fmt.Errorf("not implemented: LikedOutfits - likedOutfits"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
